[{"D:\\web_dev\\chessy\\client\\src\\index.tsx":"1","D:\\web_dev\\chessy\\client\\src\\App.tsx":"2","D:\\web_dev\\chessy\\client\\src\\container\\SideWindow\\SideWindow.tsx":"3","D:\\web_dev\\chessy\\client\\src\\container\\Game\\index.tsx":"4","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\index.tsx":"5","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\CancelConfirmationDialog.tsx":"6","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\RequestPlayDialog.tsx":"7","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\ChooseStoneColorDialog.tsx":"8","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\ReplacePawnDialog.tsx":"9","D:\\web_dev\\chessy\\client\\src\\component\\square\\Square.tsx":"10","D:\\web_dev\\chessy\\client\\src\\component\\square\\SquareItem.tsx":"11","D:\\web_dev\\chessy\\client\\src\\component\\stone\\Stone.tsx":"12","D:\\web_dev\\chessy\\client\\src\\component\\stone\\StoneItem.tsx":"13","D:\\web_dev\\chessy\\client\\src\\container\\Notification\\index.tsx":"14","D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionNotification\\index.tsx":"15","D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionLessNotification\\index.tsx":"16","D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionNotification\\WaitingNotification.tsx":"17","D:\\web_dev\\chessy\\client\\src\\component\\Logs\\index.tsx":"18","D:\\web_dev\\chessy\\client\\src\\component\\RegisterPanel\\index.tsx":"19","D:\\web_dev\\chessy\\client\\src\\component\\UserStatus\\index.tsx":"20","D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\index.tsx":"21","D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\ListElement.tsx":"22","D:\\web_dev\\chessy\\client\\src\\component\\UserAvatar\\index.tsx":"23","D:\\web_dev\\chessy\\client\\src\\component\\LogOutButton\\index.tsx":"24","D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\UserPopup.tsx":"25","D:\\web_dev\\chessy\\client\\src\\constants\\color.ts":"26","D:\\web_dev\\chessy\\client\\src\\hooks\\useAppSelector.ts":"27","D:\\web_dev\\chessy\\client\\src\\hooks\\useAppDispatch.ts":"28","D:\\web_dev\\chessy\\client\\src\\core\\store\\store.ts":"29","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\dialog\\index.ts":"30","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\notification\\index.ts":"31","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\logs\\index.ts":"32","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\gameState\\index.ts":"33","D:\\web_dev\\chessy\\client\\src\\assets\\icons\\stoneIcons.ts":"34","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\index.ts":"35","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\DangerOnKing.ts":"36","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\isInRange.ts":"37","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\initializeBord.ts":"38","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\MoveRules.ts":"39","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\moveStone.ts":"40","D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\dangerOnStone.ts":"41","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\index.ts":"42","D:\\web_dev\\chessy\\client\\src\\core\\models\\square\\index.ts":"43","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\bishop.ts":"44","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\king.ts":"45","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\knight.ts":"46","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\queen.ts":"47","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\pawn.ts":"48","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\rook.ts":"49","D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\stone.ts":"50","D:\\web_dev\\chessy\\client\\src\\util\\encodeMessage.ts":"51","D:\\web_dev\\chessy\\client\\src\\core\\services\\registerUser\\index.tsx":"52","D:\\web_dev\\chessy\\client\\src\\core\\services\\gameConnection\\index.ts":"53","D:\\web_dev\\chessy\\client\\src\\core\\models\\webSocket\\index.ts":"54","D:\\web_dev\\chessy\\client\\src\\core\\models\\webSocket\\initializeWebSocket.ts":"55","D:\\web_dev\\chessy\\client\\src\\util\\decodeMessage.ts":"56","D:\\web_dev\\chessy\\client\\src\\configProject.tsx":"57","D:\\web_dev\\chessy\\client\\src\\core\\store\\storeHelper.ts":"58","D:\\web_dev\\chessy\\client\\src\\types\\ActionNotificationTypes.ts":"59","D:\\web_dev\\chessy\\client\\src\\container\\Game\\handleLog.ts":"60","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\gameState\\isPlayerStone.ts":"61"},{"size":565,"mtime":1625922899303,"results":"62","hashOfConfig":"63"},{"size":1231,"mtime":1625922828297,"results":"64","hashOfConfig":"63"},{"size":3431,"mtime":1626051421988,"results":"65","hashOfConfig":"63"},{"size":690,"mtime":1626120849777,"results":"66","hashOfConfig":"63"},{"size":1320,"mtime":1626079799905,"results":"67","hashOfConfig":"63"},{"size":1377,"mtime":1625814750100,"results":"68","hashOfConfig":"63"},{"size":1624,"mtime":1626096667788,"results":"69","hashOfConfig":"63"},{"size":2131,"mtime":1626250791793,"results":"70","hashOfConfig":"63"},{"size":1438,"mtime":1625814273580,"results":"71","hashOfConfig":"63"},{"size":2031,"mtime":1626120878789,"results":"72","hashOfConfig":"63"},{"size":685,"mtime":1625900964094,"results":"73","hashOfConfig":"63"},{"size":588,"mtime":1625862660580,"results":"74","hashOfConfig":"63"},{"size":457,"mtime":1625814961994,"results":"75","hashOfConfig":"63"},{"size":703,"mtime":1625841315501,"results":"76","hashOfConfig":"63"},{"size":396,"mtime":1625840117261,"results":"77","hashOfConfig":"63"},{"size":1369,"mtime":1626010391336,"results":"78","hashOfConfig":"63"},{"size":1542,"mtime":1626074143947,"results":"79","hashOfConfig":"63"},{"size":377,"mtime":1626162777065,"results":"80","hashOfConfig":"63"},{"size":998,"mtime":1625922795234,"results":"81","hashOfConfig":"63"},{"size":901,"mtime":1626251213314,"results":"82","hashOfConfig":"63"},{"size":419,"mtime":1625814961994,"results":"83","hashOfConfig":"63"},{"size":2758,"mtime":1626050414108,"results":"84","hashOfConfig":"63"},{"size":484,"mtime":1625815049112,"results":"85","hashOfConfig":"63"},{"size":1217,"mtime":1626251557729,"results":"86","hashOfConfig":"63"},{"size":2273,"mtime":1626074346037,"results":"87","hashOfConfig":"63"},{"size":193,"mtime":1625900084842,"results":"88","hashOfConfig":"63"},{"size":196,"mtime":1625814208353,"results":"89","hashOfConfig":"63"},{"size":164,"mtime":1625814208353,"results":"90","hashOfConfig":"63"},{"size":696,"mtime":1626100919298,"results":"91","hashOfConfig":"63"},{"size":1944,"mtime":1626079444267,"results":"92","hashOfConfig":"63"},{"size":1535,"mtime":1626009919310,"results":"93","hashOfConfig":"63"},{"size":576,"mtime":1626085459023,"results":"94","hashOfConfig":"63"},{"size":5565,"mtime":1626251540578,"results":"95","hashOfConfig":"63"},{"size":420,"mtime":1625560033119,"results":"96","hashOfConfig":"63"},{"size":8207,"mtime":1626265432632,"results":"97","hashOfConfig":"63"},{"size":1002,"mtime":1626252305833,"results":"98","hashOfConfig":"63"},{"size":100,"mtime":1625641359210,"results":"99","hashOfConfig":"63"},{"size":5661,"mtime":1626265403616,"results":"100","hashOfConfig":"63"},{"size":178,"mtime":1625582185567,"results":"101","hashOfConfig":"63"},{"size":505,"mtime":1625814966052,"results":"102","hashOfConfig":"63"},{"size":4226,"mtime":1625821095787,"results":"103","hashOfConfig":"63"},{"size":254,"mtime":1625582405678,"results":"104","hashOfConfig":"63"},{"size":353,"mtime":1625814969369,"results":"105","hashOfConfig":"63"},{"size":448,"mtime":1625830099836,"results":"106","hashOfConfig":"63"},{"size":369,"mtime":1625830107245,"results":"107","hashOfConfig":"63"},{"size":379,"mtime":1625830113945,"results":"108","hashOfConfig":"63"},{"size":515,"mtime":1625830125342,"results":"109","hashOfConfig":"63"},{"size":369,"mtime":1625830119326,"results":"110","hashOfConfig":"63"},{"size":438,"mtime":1625830132557,"results":"111","hashOfConfig":"63"},{"size":347,"mtime":1625830145097,"results":"112","hashOfConfig":"63"},{"size":91,"mtime":1625297900755,"results":"113","hashOfConfig":"63"},{"size":1552,"mtime":1626051682964,"results":"114","hashOfConfig":"63"},{"size":283,"mtime":1626026396654,"results":"115","hashOfConfig":"63"},{"size":2263,"mtime":1626251497828,"results":"116","hashOfConfig":"63"},{"size":4402,"mtime":1626253187085,"results":"117","hashOfConfig":"63"},{"size":90,"mtime":1625297947456,"results":"118","hashOfConfig":"63"},{"size":166,"mtime":1625830790509,"results":"119","hashOfConfig":"63"},{"size":199,"mtime":1625836296752,"results":"120","hashOfConfig":"63"},{"size":47,"mtime":1625839913181,"results":"121","hashOfConfig":"63"},{"size":772,"mtime":1625915116109,"results":"122","hashOfConfig":"63"},{"size":533,"mtime":1626100626197,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"109pfp5",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"D:\\web_dev\\chessy\\client\\src\\index.tsx",[],["257","258"],"D:\\web_dev\\chessy\\client\\src\\App.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\SideWindow\\SideWindow.tsx",["259","260","261"],"import { useState, useEffect, memo, useMemo } from \"react\";\r\n\r\nimport {\r\n  Paper,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Typography,\r\n  Grid,\r\n  Fab,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport UserStatus from \"src/component/UserStatus\";\r\nimport UsersList from \"src/component/UsersList\";\r\n//Icons\r\nimport { Icon } from \"@iconify/react\";\r\nimport chevronUp from \"@iconify-icons/mdi/chevron-up\";\r\n//firebase\r\nimport firebase from \"firebase\";\r\n//hooks\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//type\r\nimport RegisterPanel from \"src/component/RegisterPanel\";\r\n//util\r\nimport { map } from \"lodash\";\r\n\r\nimport { User } from \"src/types/User\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideWindow: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(firebase.auth().currentUser);\r\n\r\n  const [allUsers, setUsersList] = useState<User[]>([]);\r\n\r\n  const theme = useTheme();\r\n  const mediaQr = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      firebase\r\n        .database()\r\n        .ref(\"users\")\r\n        .on(\"value\", (snapshot) => {\r\n          const usersList = snapshot.val();\r\n          let data = [];\r\n          if (usersList) {\r\n            if (usersList[user.uid]) delete usersList[user.uid];\r\n            data = map(usersList, (val: any, key: any) => ({\r\n              uid: key,\r\n              ...val,\r\n            }));\r\n          }\r\n          setUsersList(data);\r\n        });\r\n      //set lister to the updated values of database\r\n      const fireRef = firebase.database().ref(\"users\");\r\n      fireRef.on(\"child_changed\", (snapshot) => {\r\n        const newState = { uid: snapshot.key, ...snapshot.val() };\r\n        const data = allUsers.map((e) => {\r\n          if (e.uid === newState.uid) return newState;\r\n          else return e;\r\n        });\r\n        setUsersList(data);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    setUser(firebase.auth().currentUser);\r\n  }, [firebase.auth().currentUser]);\r\n\r\n  useEffect(() => {\r\n    setOpen(mediaQr);\r\n  }, [mediaQr]);\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        onClick={() => setOpen((prev) => !prev)}\r\n        color=\"primary\"\r\n        className={classes.fab}\r\n      >\r\n        <Icon icon={chevronUp} />\r\n      </Fab>\r\n      <Slide direction=\"right\" in={open}>\r\n        <Paper className={classes.root}>\r\n          <Grid container>\r\n            {user && (\r\n              <Grid item>\r\n                <UserStatus user={user} />\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item className={classes.bar}>\r\n              <Typography variant=\"h5\">CHESSY 🤔♟</Typography>\r\n            </Grid>\r\n\r\n            {user ? (\r\n              <Grid item>\r\n                <UsersList allUsers={allUsers} />\r\n              </Grid>\r\n            ) : (\r\n              <RegisterPanel />\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n      </Slide>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(SideWindow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    position: \"fixed\",\r\n    zIndex: 2,\r\n    width: drawerWidth,\r\n    overflowY: \"scroll\",\r\n    height: \"90%\",\r\n  },\r\n  bar: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"linear-gradient(to right, rgb(0, 180, 219), rgb(0, 131, 176))\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    left: drawerWidth + 10,\r\n  },\r\n}));\r\n","D:\\web_dev\\chessy\\client\\src\\container\\Game\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\CancelConfirmationDialog.tsx",["262","263"],"import { memo, useCallback } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\n//states\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\nimport { hideDialog } from \"src/core/store/reducer/dialog\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n}\r\n\r\nconst DialogOption = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          firebase.auth().signOut();\r\n          dispatch(hideDialog());\r\n        }}\r\n      >\r\n        {\" \"}\r\n        OK\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          dispatch(hideDialog());\r\n        }}\r\n      >\r\n        CONTINUE\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChooseStoneColorDialog = ({ open }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleClose = useCallback(() => dispatch(hideDialog()), []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Warning</DialogTitle>\r\n      <DialogContentText>you will lose the game 😨</DialogContentText>\r\n\r\n      <DialogActions>{DialogOption}</DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default memo(ChooseStoneColorDialog);\r\n","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\RequestPlayDialog.tsx",["264","265","266"],"import { memo, useCallback } from \"react\";\r\n//Component\r\nimport { Dialog, DialogActions, DialogTitle, Button } from \"@material-ui/core\";\r\n\r\n//util\r\n\r\n//state\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\n\r\n//action\r\nimport { hideDialog } from \"src/core/store/reducer/dialog\";\r\nimport { hideNotification } from \"src/core/store/reducer/notification\";\r\nimport { acceptGame, rejectGame } from \"src/core/store/reducer/gameState\";\r\nimport { color } from \"src/constants/color\";\r\nimport { Color } from \"src/types/Color\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  opponent: {\r\n    name: string;\r\n    uid: string;\r\n    color: Color;\r\n  };\r\n}\r\n\r\nconst RequestPlayDialog = ({ open, opponent }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const handleAccept = useCallback((color) => {\r\n    dispatch(acceptGame());\r\n    dispatch(hideDialog());\r\n\r\n    setTimeout(() => dispatch(hideNotification()), 3000);\r\n  }, []);\r\n\r\n  const handleReject = useCallback(() => {\r\n    dispatch(rejectGame());\r\n    dispatch(hideDialog());\r\n  }, []);\r\n  console.log(opponent);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        Player {opponent.name} is requesting for play with{\" \"}\r\n        {opponent.color === color.white ? \"white\" : \"black\"}\r\n      </DialogTitle>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleAccept}>yes</Button>\r\n        <Button onClick={handleReject}>no</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RequestPlayDialog;\r\n","D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\ChooseStoneColorDialog.tsx",["267","268","269"],"D:\\web_dev\\chessy\\client\\src\\container\\Dialog\\ReplacePawnDialog.tsx",["270","271"],"import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\n//icon\r\nimport { Icon } from \"@iconify/react\";\r\nimport { stoneIcons } from \"src/assets/icons/stoneIcons\";\r\nimport { memo, useCallback } from \"react\";\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\nimport { hideDialog } from \"src/core/store/reducer/dialog\";\r\nimport { map } from \"lodash\";\r\n\r\nconst StoneOption = () => {\r\n  const dispatch = useAppDispatch();\r\n  const handleClick = useCallback((e) => {\r\n    dispatch(hideDialog());\r\n\r\n    //TODO: change the stone of the board\r\n    //TODO: dispatch logs\r\n    // setBoard((prev) => {\r\n    //   const newState = [...prev];\r\n    //   newState[dest_i][dest_j].stone.type = e;\r\n    //   return newState;\r\n    // });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {map(stoneIcons, (stone, key) => (\r\n        <IconButton onClick={() => handleClick(key)}>\r\n          <Icon icon={stone} />\r\n        </IconButton>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n}\r\nfunction ReplacePawnDialog({ open }: Props) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">replace pawn stone</DialogTitle>\r\n      <DialogContent>{StoneOption}</DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\nexport default memo(ReplacePawnDialog);\r\n","D:\\web_dev\\chessy\\client\\src\\component\\square\\Square.tsx",["272","273","274","275","276"],"import React, { useMemo } from \"react\";\r\nimport Stone from \"../stone/Stone\";\r\nimport { useCallback } from \"react\";\r\nimport { square } from \"src/core/models/square\";\r\nimport { Position } from \"src/types/Position\";\r\nimport SquareItem from \"./SquareItem\";\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\nimport { clickSquare, sendMove } from \"src/core/store/reducer/gameState\";\r\nimport { useAppSelector } from \"src/hooks/useAppSelector\";\r\nimport { changeTurn } from \"src/core/store/reducer/gameState\";\r\n\r\ninterface Props {\r\n  position: Position;\r\n}\r\n\r\nconst Square = ({ position }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [\r\n    board,\r\n    selectedSquarePosition,\r\n    whereStoneCanGo,\r\n    currentSquare,\r\n    isPlayerTurn,\r\n    isPlaying,\r\n  ] = useAppSelector((state) => [\r\n    state.gameState.board.board,\r\n    state.gameState.selectedSquarePosition,\r\n    state.gameState.whereStoneCanGo,\r\n    state.gameState.board.board[position.i][position.j],\r\n    state.gameState.isPlayerTurn,\r\n    state.gameState.isPlaying,\r\n  ]);\r\n\r\n  const handleSquareClick = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      e.stopPropagation();\r\n      if (isPlayerTurn || !isPlaying) {\r\n        dispatch(clickSquare(position));\r\n      }\r\n    },\r\n    [isPlaying, isPlayerTurn]\r\n  );\r\n\r\n  const selected = useMemo(() => {\r\n    if (!selectedSquarePosition) return false;\r\n    const id =\r\n      board[selectedSquarePosition.i][selectedSquarePosition.j].stone!.id;\r\n\r\n    return (\r\n      whereStoneCanGo[id].includes(currentSquare.id) ||\r\n      (position.i === selectedSquarePosition.i &&\r\n        position.j === selectedSquarePosition.j)\r\n    );\r\n  }, [selectedSquarePosition, whereStoneCanGo]);\r\n\r\n  return (\r\n    <SquareItem\r\n      color2={currentSquare.color}\r\n      selected={selected}\r\n      onClick={handleSquareClick}\r\n    >\r\n      {currentSquare.stone && (\r\n        <Stone handleClick={handleSquareClick} stone={currentSquare.stone} />\r\n      )}\r\n    </SquareItem>\r\n  );\r\n};\r\nexport default Square;\r\n","D:\\web_dev\\chessy\\client\\src\\component\\square\\SquareItem.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\stone\\Stone.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\stone\\StoneItem.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\Notification\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionNotification\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionLessNotification\\index.tsx",["277"],"import { useMemo } from \"react\";\r\nimport { Typography, Snackbar } from \"@material-ui/core\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { NotificationTypes } from \"src/types/NotificationTypes\";\r\nimport { ActionLessNotificationTypes } from \"src/types/ActionLessNotificationTypes\";\r\nimport { useEffect } from \"react\";\r\nimport { hideNotification } from \"src/core/store/reducer/notification\";\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\n\r\ninterface Props {\r\n  notificationType: NotificationTypes;\r\n  content?: string;\r\n}\r\n\r\nconst ActionLessNotification = ({ notificationType, content }: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const isOpen = useMemo(() => {\r\n    return [\"success\", \"error\", \"warning\", \"info\"].includes(notificationType);\r\n  }, [notificationType]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) setTimeout(() => dispatch(hideNotification()), 2000);\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Snackbar\r\n      open={isOpen}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <Alert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        severity={\r\n          (notificationType as ActionLessNotificationTypes) || undefined\r\n        }\r\n      >\r\n        <Typography>{content}</Typography>\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ActionLessNotification;\r\n","D:\\web_dev\\chessy\\client\\src\\container\\Notification\\ActionNotification\\WaitingNotification.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\Logs\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\RegisterPanel\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\UserStatus\\index.tsx",["278"],"D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\ListElement.tsx",["279"],"import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  Grid,\r\n  Badge,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport UserAvatar from \"../UserAvatar\";\r\nimport UserPopup from \"./UserPopup\";\r\nimport { User } from \"src/types/User\";\r\n\r\ninterface StateColorInterface {\r\n  online: \"badgeGreen\";\r\n  busy: \"badgeYellow\";\r\n  offline: \"badgeRed\";\r\n}\r\n\r\nconst stateColor: StateColorInterface = {\r\n  online: \"badgeGreen\",\r\n  busy: \"badgeYellow\",\r\n  offline: \"badgeRed\",\r\n};\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\nconst ListElement: React.FC<Props> = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [keep, setKeep] = useState(false);\r\n\r\n  //TODO : put the list Item in the top of component and if it works get it outside\r\n  if (user.state != \"offline\") console.log(user.state);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={<UserPopup setOpen={setOpen} setKeep={setKeep} user={user} />}\r\n      placement=\"right\"\r\n      interactive\r\n      arrow\r\n      open={open || keep}\r\n    >\r\n      <Button\r\n        className={classes.listItemContainer}\r\n        onMouseEnter={() => setOpen(true)}\r\n        onMouseLeave={() => setOpen(false)}\r\n        onClick={() => setOpen((prev) => !prev)}\r\n      >\r\n        <ListItem className={classes.listItem}>\r\n          <Grid container>\r\n            <Grid item>\r\n              <ListItemAvatar>\r\n                <ListItemIcon>\r\n                  <Badge\r\n                    classes={{ badge: classes[stateColor[user.state]] }}\r\n                    variant=\"dot\"\r\n                  >\r\n                    <UserAvatar\r\n                      displayName={user.displayName}\r\n                      photoURL={user.photoURL}\r\n                    />\r\n                  </Badge>\r\n                </ListItemIcon>\r\n              </ListItemAvatar>\r\n            </Grid>\r\n            <Grid item>\r\n              <ListItemText>{user.displayName}</ListItemText>\r\n            </Grid>\r\n          </Grid>\r\n        </ListItem>\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ListElement;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  logInGrid: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  listItemContainer: {\r\n    width: \"100%\",\r\n    borderBottom: \"2px solid\",\r\n    borderBottomColor: theme.palette.divider,\r\n    borderRadius: 0,\r\n  },\r\n  item: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  badgeGreen: {\r\n    backgroundColor: \"#4caf50\",\r\n  },\r\n  badgeYellow: { backgroundColor: \"#ff9800\" },\r\n\r\n  badgeRed: {\r\n    backgroundColor: \"#f44336\",\r\n  },\r\n}));\r\n","D:\\web_dev\\chessy\\client\\src\\component\\UserAvatar\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\component\\LogOutButton\\index.tsx",["280"],"D:\\web_dev\\chessy\\client\\src\\component\\UsersList\\UserPopup.tsx",["281"],"import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport UserAvatar from \"../UserAvatar\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useAppSelector } from \"src/hooks/useAppSelector\";\r\nimport { showChooseStoneColorDialog } from \"src/core/store/reducer/dialog\";\r\nimport { useAppDispatch } from \"src/hooks/useAppDispatch\";\r\nimport { User } from \"src/types/User\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n\r\n  avatar: {\r\n    backgroundColor: \"#FFC83D\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  user: User;\r\n  setOpen: (arg0: boolean) => void;\r\n  setKeep: (arg0: boolean) => void;\r\n}\r\n\r\n//TODO: handle the stop case\r\n\r\nconst UserInfo: React.FC<Props> = ({ user, setKeep }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const notificationType = useAppSelector(\r\n    (state) => state.notification.notificationType\r\n  );\r\n\r\n  const handlePlay = useCallback(() => {\r\n    dispatch(showChooseStoneColorDialog({ opponentUID: user.uid }));\r\n    setKeep(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={() => setKeep(true)}\r\n      onMouseLeave={() => setKeep(false)}\r\n      className={classes.root}\r\n    >\r\n      <CardHeader\r\n        avatar={\r\n          <UserAvatar photoURL={user.photoURL} displayName={user.displayName} />\r\n        }\r\n        title={user.displayName ? user.displayName : \"\"}\r\n        subheader={user.email ? user.email : \"\"}\r\n      />\r\n      <CardContent>\r\n        <Typography>\r\n          win : &nbsp;&nbsp; {user.win ? user.win : \" - \"}\r\n        </Typography>\r\n        <Typography>\r\n          tie : &nbsp;&nbsp; &nbsp; {user.tie ? user.tie : \" - \"}\r\n        </Typography>\r\n        <Typography>lose : &nbsp; {user.lose ? user.lose : \" - \"}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {user.state === \"online\" && (\r\n          <Button\r\n            disabled={notificationType === \"wait\"}\r\n            onClick={handlePlay}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            play\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","D:\\web_dev\\chessy\\client\\src\\constants\\color.ts",[],"D:\\web_dev\\chessy\\client\\src\\hooks\\useAppSelector.ts",[],"D:\\web_dev\\chessy\\client\\src\\hooks\\useAppDispatch.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\store.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\dialog\\index.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\notification\\index.ts",["282"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ActionNotificationTypes } from \"src/types/ActionNotificationTypes\";\r\nimport { ActionLessNotificationTypes } from \"src/types/ActionLessNotificationTypes\";\r\nimport store from \"../../store\";\r\n\r\ninterface InitialState {\r\n  notificationType: ActionNotificationTypes | ActionLessNotificationTypes | \"\";\r\n  content: string;\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  notificationType: \"\",\r\n  content: \"\",\r\n};\r\n\r\n//payload interface\r\ntype ActionNotificationPayload = ActionNotificationTypes;\r\n\r\ninterface ActionLessNotificationPayload {\r\n  notificationType: ActionLessNotificationTypes;\r\n  content: string;\r\n}\r\n\r\nconst notificationSlice = createSlice({\r\n  name: \"Notification\",\r\n  initialState,\r\n  reducers: {\r\n    showActionNotification: (\r\n      state,\r\n      action: PayloadAction<ActionNotificationPayload>\r\n    ) => {\r\n      state.notificationType = action.payload;\r\n    },\r\n    showActionLessNotification: (\r\n      state,\r\n      action: PayloadAction<ActionLessNotificationPayload>\r\n    ) => {\r\n      state.notificationType = action.payload.notificationType;\r\n      state.content = action.payload.content;\r\n    },\r\n    hideNotification: (state, action: PayloadAction<undefined>) => {\r\n      state.notificationType = \"\";\r\n      state.content = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  showActionNotification,\r\n  showActionLessNotification,\r\n  hideNotification,\r\n} = notificationSlice.actions;\r\n\r\nexport const notificationReducer = notificationSlice.reducer;\r\n","D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\logs\\index.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\gameState\\index.ts",[],"D:\\web_dev\\chessy\\client\\src\\assets\\icons\\stoneIcons.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\index.ts",["283"],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\DangerOnKing.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\isInRange.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\initializeBord.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\MoveRules.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\moveStone.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\board\\dangerOnStone.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\index.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\square\\index.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\bishop.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\king.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\knight.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\queen.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\pawn.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\rook.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\models\\stone\\stone.ts",[],"D:\\web_dev\\chessy\\client\\src\\util\\encodeMessage.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\services\\registerUser\\index.tsx",[],"D:\\web_dev\\chessy\\client\\src\\core\\services\\gameConnection\\index.ts",["284"],"import webSocketConnection from \"src/core/models/webSocket\";\r\nimport firebase from \"firebase\";\r\nif (!process.env.REACT_APP_WS_SERVER) {\r\n  throw new Error(\"websocket url is not set\");\r\n}\r\nexport const gameConnection = new webSocketConnection(\r\n  process.env.REACT_APP_WS_SERVER\r\n);\r\n","D:\\web_dev\\chessy\\client\\src\\core\\models\\webSocket\\index.ts",["285","286"],"D:\\web_dev\\chessy\\client\\src\\core\\models\\webSocket\\initializeWebSocket.ts",["287","288","289","290"],"D:\\web_dev\\chessy\\client\\src\\util\\decodeMessage.ts",[],"D:\\web_dev\\chessy\\client\\src\\configProject.tsx",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\storeHelper.ts",[],"D:\\web_dev\\chessy\\client\\src\\types\\ActionNotificationTypes.ts",[],"D:\\web_dev\\chessy\\client\\src\\container\\Game\\handleLog.ts",[],"D:\\web_dev\\chessy\\client\\src\\core\\store\\reducer\\gameState\\isPlayerStone.ts",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":1,"column":37,"nodeType":"297","messageId":"298","endLine":1,"endColumn":44},{"ruleId":"299","severity":1,"message":"300","line":68,"column":6,"nodeType":"301","endLine":68,"endColumn":12,"suggestions":"302"},{"ruleId":"299","severity":1,"message":"303","line":72,"column":7,"nodeType":"304","endLine":72,"endColumn":34},{"ruleId":"295","severity":1,"message":"305","line":48,"column":9,"nodeType":"297","messageId":"298","endLine":48,"endColumn":20},{"ruleId":"299","severity":1,"message":"306","line":48,"column":65,"nodeType":"301","endLine":48,"endColumn":67,"suggestions":"307"},{"ruleId":"295","severity":1,"message":"308","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":14},{"ruleId":"299","severity":1,"message":"306","line":33,"column":6,"nodeType":"301","endLine":33,"endColumn":8,"suggestions":"309"},{"ruleId":"299","severity":1,"message":"306","line":38,"column":6,"nodeType":"301","endLine":38,"endColumn":8,"suggestions":"310"},{"ruleId":"295","severity":1,"message":"311","line":14,"column":8,"nodeType":"297","messageId":"298","endLine":14,"endColumn":19},{"ruleId":"299","severity":1,"message":"312","line":41,"column":6,"nodeType":"301","endLine":41,"endColumn":8,"suggestions":"313"},{"ruleId":"299","severity":1,"message":"306","line":57,"column":65,"nodeType":"301","endLine":57,"endColumn":67,"suggestions":"314"},{"ruleId":"295","severity":1,"message":"315","line":3,"column":3,"nodeType":"297","messageId":"298","endLine":3,"endColumn":16},{"ruleId":"299","severity":1,"message":"306","line":29,"column":6,"nodeType":"301","endLine":29,"endColumn":8,"suggestions":"316"},{"ruleId":"295","severity":1,"message":"317","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":16},{"ruleId":"295","severity":1,"message":"318","line":8,"column":23,"nodeType":"297","messageId":"298","endLine":8,"endColumn":31},{"ruleId":"295","severity":1,"message":"319","line":10,"column":10,"nodeType":"297","messageId":"298","endLine":10,"endColumn":20},{"ruleId":"299","severity":1,"message":"320","line":41,"column":5,"nodeType":"301","endLine":41,"endColumn":30,"suggestions":"321"},{"ruleId":"299","severity":1,"message":"322","line":54,"column":6,"nodeType":"301","endLine":54,"endColumn":47,"suggestions":"323"},{"ruleId":"299","severity":1,"message":"324","line":25,"column":6,"nodeType":"301","endLine":25,"endColumn":14,"suggestions":"325"},{"ruleId":"295","severity":1,"message":"326","line":2,"column":40,"nodeType":"297","messageId":"298","endLine":2,"endColumn":50},{"ruleId":"327","severity":1,"message":"328","line":41,"column":18,"nodeType":"329","messageId":"330","endLine":41,"endColumn":20},{"ruleId":"299","severity":1,"message":"331","line":28,"column":6,"nodeType":"301","endLine":28,"endColumn":8,"suggestions":"332"},{"ruleId":"299","severity":1,"message":"333","line":48,"column":6,"nodeType":"301","endLine":48,"endColumn":8,"suggestions":"334"},{"ruleId":"295","severity":1,"message":"335","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":13},{"ruleId":"295","severity":1,"message":"317","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":16},{"ruleId":"295","severity":1,"message":"336","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":16},{"ruleId":"295","severity":1,"message":"335","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":13},{"ruleId":"295","severity":1,"message":"337","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":36},{"ruleId":"295","severity":1,"message":"338","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":20},{"ruleId":"295","severity":1,"message":"339","line":13,"column":10,"nodeType":"297","messageId":"298","endLine":13,"endColumn":21},{"ruleId":"295","severity":1,"message":"340","line":13,"column":23,"nodeType":"297","messageId":"298","endLine":13,"endColumn":32},{"ruleId":"295","severity":1,"message":"341","line":21,"column":9,"nodeType":"297","messageId":"298","endLine":21,"endColumn":17},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allUsers'. Either include it or remove the dependency array.","ArrayExpression",["344"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'handleClose' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["345"],"'memo' is defined but never used.",["346"],["347"],"'windowClose' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'opponentUID'. Either include them or remove the dependency array.",["348"],["349"],"'DialogActions' is defined but never used.",["350"],"'square' is defined but never used.","'sendMove' is defined but never used.","'changeTurn' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'position'. Either include them or remove the dependency array.",["351"],"React Hook useMemo has missing dependencies: 'board', 'currentSquare.id', 'position.i', and 'position.j'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["353"],"'IconButton' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has missing dependencies: 'dispatch' and 'isPlaying'. Either include them or remove the dependency array.",["354"],"React Hook useCallback has missing dependencies: 'dispatch', 'setKeep', and 'user.uid'. Either include them or remove the dependency array. If 'setKeep' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"'store' is defined but never used.","'firebase' is defined but never used.","'showActionLessNotification' is defined but never used.","'StrictMode' is defined but never used.","'AppDispatch' is defined but never used.","'RootState' is defined but never used.","'storeObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"358","fix":"360"},{"desc":"358","fix":"361"},{"desc":"362","fix":"363"},{"desc":"358","fix":"364"},{"desc":"358","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [allUsers, user]",{"range":"376","text":"377"},"Update the dependencies array to be: [dispatch]",{"range":"378","text":"379"},{"range":"380","text":"379"},{"range":"381","text":"379"},"Update the dependencies array to be: [dispatch, opponentUID]",{"range":"382","text":"383"},{"range":"384","text":"379"},{"range":"385","text":"379"},"Update the dependencies array to be: [isPlayerTurn, isPlaying, dispatch, position]",{"range":"386","text":"387"},"Update the dependencies array to be: [board, currentSquare.id, position.i, position.j, selectedSquarePosition, whereStoneCanGo]",{"range":"388","text":"389"},"Update the dependencies array to be: [dispatch, isOpen]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, isPlaying]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch, setKeep, user.uid]",{"range":"394","text":"395"},[1921,1927],"[allUsers, user]",[955,957],"[dispatch]",[921,923],[1036,1038],[1135,1137],"[dispatch, opponentUID]",[1641,1643],[798,800],[1277,1302],"[isPlayerTurn, isPlaying, dispatch, position]",[1675,1716],"[board, currentSquare.id, position.i, position.j, selectedSquarePosition, whereStoneCanGo]",[904,912],"[dispatch, isOpen]",[1044,1046],"[dispatch, isPlaying]",[1166,1168],"[dispatch, setKeep, user.uid]"]